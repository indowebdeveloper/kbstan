# Generated by Django 3.0.8 on 2020-12-06 05:22

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(default='', max_length=40)),
                ('isCustomer', models.BooleanField(default=False)),
                ('isStaff', models.BooleanField(default=False)),
                ('phoneNumber', models.CharField(blank=True, editable=False, max_length=15, null=True, verbose_name='Phone number')),
                ('mobileNumber', models.CharField(blank=True, max_length=15, null=True, verbose_name='Mobile number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('home', 'home'), ('work', 'work')], default='home', max_length=4)),
                ('street', models.CharField(max_length=50)),
                ('houseNumber', models.CharField(max_length=5, verbose_name='House number')),
                ('city', models.CharField(max_length=50)),
                ('zipCode', models.CharField(max_length=8)),
                ('state', models.CharField(choices=[('Jakarta', 'Jakarta'), ('Special Region of Yogyakarta', 'Special Region of Yogyakarta'), ('East Kalimantan', 'East Kalimantan'), ('Riau Islands', 'Riau Islands'), ('Bali', 'Bali'), ('Riau', 'Riau'), ('North Sulawesi', 'North Sulawesi'), ('Banten', 'Banten'), ('West Sumatra', 'West Sumatra'), ('West Java', 'West Java'), ('Aceh', 'Aceh'), ('Central Java', 'Central Java'), ('North Sumatra', 'North Sumatra'), ('South Sulawesi', 'South Sulawesi'), ('East Java', 'East Java'), ('Bangka Belitung Islands', 'Bangka Belitung Islands'), ('Bengkulu', 'Bengkulu'), ('Jambi', 'Jambi'), ('Southeast Sulawesi', 'Southeast Sulawesi'), ('North Kalimantan', 'North Kalimantan'), ('Central Kalimantan', 'Central Kalimantan'), ('South Kalimantan', 'South Kalimantan'), ('South Sumatra', 'South Sumatra'), ('Lampung', 'Lampung'), ('Central Sulawesi', 'Central Sulawesi'), ('Maluku', 'Maluku'), ('Gorontalo', 'Gorontalo'), ('North Maluku', 'North Maluku'), ('West Nusa Tenggara', 'West Nusa Tenggara'), ('West Kalimantan', 'West Kalimantan'), ('West Sulawesi', 'West Sulawesi'), ('East Nusa Tenggara', 'East Nusa Tenggara'), ('West Papua', 'West Papua'), ('Papua', 'Papua')], max_length=50)),
                ('shippingCost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Shipping cost')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customers.Customer')),
            ],
        ),
    ]
