# Generated by Django 3.0.8 on 2020-12-06 05:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('stores', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers', '0001_initial'),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('dateEdited', models.DateTimeField(auto_now=True)),
                ('orderChannel', models.CharField(choices=[('WhatsApp', 'WhatsApp'), ('Phone Call', 'Phone Call'), ('Email', 'Email'), ('Instagram', 'Instagram'), ('Facebook', 'Facebook'), ('Marketplace', 'Marketplace'), ('Chat Box', 'Chat Box'), ('Website', 'Website')], default='WhatsApp', max_length=20, verbose_name='Order channel')),
                ('paymentOption', models.CharField(blank=True, choices=[('Bank Transfer', 'Bank Transfer'), ('Payment in the store', 'Payment in the store'), ('Payment on delivery', 'Payment on delivery'), ('Indodana', 'Indodana')], max_length=30, null=True, verbose_name='Payment option')),
                ('installmentPeriod', models.CharField(blank=True, choices=[('1', '1 month'), ('3', '3 months'), ('6', '6 months'), ('12', '12 months')], max_length=30, null=True, verbose_name='Indodana installment period')),
                ('shippingCost', models.PositiveIntegerField(blank=True, null=True, verbose_name='Shipping cost')),
                ('status', models.CharField(choices=[('Enquiry', 'Enquiry'), ('Pending', 'Pending'), ('Awaiting Bank Transfer', 'Awaiting Bank Transfer'), ('Awaiting payment in store', 'Awaiting payment in store'), ('Awaiting payment on delivery', 'Awaiting payment on delivery'), ('Awaiting Indodana confirmation', 'Awaiting Indodana confirmation'), ('Reserved', 'Reserved'), ('Paid on website', 'Paid on website'), ('Paid in store', 'Paid in store'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled'), ('Refund in process', 'Refund in process'), ('Refunded', 'Refunded')], max_length=30)),
                ('coupon_code', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers.Customer')),
                ('shippingAddress', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers.Address')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stores.Store')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('appointmentDate', models.DateField(verbose_name='Appointment Date')),
                ('appontmentTimeSlot', models.CharField(choices=[('morning', 'morning (7am - 10am)'), ('afternoon', 'afternoon (1am - 6pm)'), ('evening', 'evening (7pm - 9pm)')], max_length=10, verbose_name='Appointment time slot')),
                ('isFinished', models.BooleanField(default=False)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.Order')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.Service')),
            ],
        ),
        migrations.CreateModel(
            name='ProductHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('adjustmentType', models.CharField(max_length=50)),
                ('quantity', models.IntegerField()),
                ('newQuantity', models.PositiveIntegerField()),
                ('purchasePrice', models.PositiveIntegerField(blank=True, null=True)),
                ('purchasePriceTotal', models.PositiveIntegerField(blank=True, null=True)),
                ('sellingPrice', models.PositiveIntegerField(blank=True, null=True)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='products.Product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('price', models.PositiveIntegerField()),
                ('discountedPrice', models.PositiveIntegerField(blank=True, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.Order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.Product')),
            ],
        ),
    ]
